{"version":3,"sources":["components/image.tsx","components/details.tsx","hooks/useModalDialog.ts","PokedexInfo.tsx","App.tsx","index.tsx"],"names":["PokemonImage","name","back","front","useState","showBack","setShowBack","className","onClick","src","alt","PokemonDetails","pokemon","flavor","sprites","isOpen","setIsOpen","ref","useRef","close","useEffect","dialog","current","removeAttribute","showModal","listener","event","target","addEventListener","removeEventListener","useModalDialog","open","type","map","text","index","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","supportedTypes","Object","keys","PokedexInfo","id","types","main_type","find","indexOf","hasFlavorText","length","style","background","undefined","color","reducer","state","action","pokemons","concat","next","initial","fetchJSON","input","init","fetch","then","response","status","statusText","json","map_async","transform","Promise","all","list","filter","x","rxWierdCharacter","RegExp","fetchFlavorText","a","data","flavor_text_entries","entry","language","flavor_text","replace","lowercase","toLowerCase","_","fetchPokemon","url","toUpperCase","slice","front_default","back_default","item","App","useReducer","dispatch","done","setIsDone","fetchData","results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed49408c.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function PokemonImage({\n  name,\n  back,\n  front,\n}: {\n  name: string;\n  back: string;\n  front: string;\n}) {\n  const [showBack, setShowBack] = useState(false);\n\n  return (\n    <figure\n      className={\"pokedex-image \" + (showBack ? \"show-back\" : \"\")}\n      onClick={() => setShowBack(!showBack)}\n    >\n      {front && (\n        <>\n          <img\n            className=\"is-front\"\n            src={front}\n            alt={`A front view depiction of ${name}.`}\n          />\n          {back ? (\n            <img\n              className=\"is-back\"\n              src={back}\n              alt={`A back view depiction of ${name}.`}\n            />\n          ) : (\n            <img className=\"is-back is-alt\" src={front} alt=\"\" />\n          )}\n        </>\n      )}\n    </figure>\n  );\n}\n","import PokemonImage from \"./image\";\n\nimport useModalDialog from \"../hooks/useModalDialog\";\n\nimport type { Pokemon } from \"../PokedexInfo\";\n\nexport default function PokemonDetails({\n  pokemon: { flavor, name, sprites },\n}: {\n  pokemon: Pokemon;\n}) {\n  const [ref, close, open] = useModalDialog();\n\n  return (\n    <>\n      <button type=\"button\" className=\"nes-button\" onClick={open}>\n        More details\n      </button>\n      <dialog className=\"nes-dialog pokedex-dialog\" ref={ref}>\n        <header>\n          <h3>{name}'s details</h3>\n          <button type=\"button\" onClick={close}>\n            <i className=\"nes-icon is-small close\"></i>\n          </button>\n        </header>\n        <main>\n          <PokemonImage name={name} front={sprites[0]} back={sprites[1]} />\n          <section>\n            {flavor.map((text, index) => (\n              <p key={index}>{text}</p>\n            ))}\n          </section>\n        </main>\n      </dialog>\n    </>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nexport default function useModalDialog() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const ref = useRef<HTMLDialogElement>(null!);\n\n  function open() {\n    setIsOpen(true);\n  }\n\n  function close() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {\n    const dialog = ref.current;\n    if (dialog) {\n      if (isOpen) {\n        dialog.removeAttribute(\"open\");\n        dialog.showModal();\n      } else {\n        dialog.close();\n      }\n    }\n  }, [ref, isOpen]);\n\n  useEffect(() => {\n    const dialog = ref.current;\n    if (dialog) {\n      const listener = function listener(event: MouseEvent) {\n        if (event.target === dialog) close();\n      };\n\n      dialog.addEventListener(\"click\", listener);\n      dialog.addEventListener(\"close\", close);\n      return () => {\n        dialog.addEventListener(\"click\", listener);\n        dialog.removeEventListener(\"close\", close);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref]);\n\n  return [ref, close, open, isOpen] as const;\n}\n","import PokemonDetails from \"./components/details\";\nimport PokemonImage from \"./components/image\";\n\nexport type Pokemon = {\n  id: string;\n  name: string;\n  sprites: [string, string];\n  flavor: string[];\n  types: string[];\n};\n\ninterface PokedexInfoProps {\n  pokemon: Pokemon;\n}\n\nconst colors: Record<string, string> = {\n  fire: \"#FFA341\",\n  grass: \"#98d7a5\",\n  electric: \"#F2E04C\",\n  water: \"#AABEFF\",\n  ground: \"#D79624\",\n  rock: \"#d5d5d4\",\n  fairy: \"#FFC8CF\",\n  poison: \"#BC8FED\",\n  bug: \"#f8d5a3\",\n  dragon: \"#97b3e6\",\n  psychic: \"#eaeda1\",\n  flying: \"#FFECC0\",\n  fighting: \"#E6E0D4\",\n  normal: \"#D5D5D5\",\n};\n\nconst supportedTypes = Object.keys(colors);\n\nexport default function PokedexInfo({ pokemon }: PokedexInfoProps) {\n  const { id, name, types, flavor, sprites } = pokemon;\n\n  const main_type = supportedTypes.find(type => types.indexOf(type) >= 0);\n\n  const hasFlavorText = flavor.length > 0;\n\n  return (\n    <>\n      <article\n        className=\"pokedex-info\"\n        style={{\n          background: main_type ? colors[main_type] : undefined,\n        }}\n      >\n        <PokemonImage name={name} front={sprites[0]} back={sprites[1]} />\n        <section>\n          <header>\n            <h3>{name}</h3>\n            <h5>#{id}</h5>\n          </header>\n          <section>\n            {types.map((type, index) => (\n              <span key={index} className=\"nes-badge\">\n                <span\n                  className=\"is-dark\"\n                  style={{\n                    color: colors[type],\n                  }}\n                >\n                  {type}\n                </span>\n              </span>\n            ))}\n            {hasFlavorText ? (\n              <>\n                <p>{flavor[0]}</p>\n                <PokemonDetails pokemon={pokemon} />\n              </>\n            ) : (\n              <p>No details were found about this pokemon</p>\n            )}\n          </section>\n        </section>\n      </article>\n    </>\n  );\n}\n","import { useEffect, useReducer, useState } from \"react\";\n\nimport PokedexInfo, { Pokemon } from \"./PokedexInfo\";\n\ntype Action = {\n  type: \"ADD_POKEMONS\";\n  pokemons: Pokemon[];\n  next: string;\n};\n\ntype State = {\n  next: string;\n  pokemons: Pokemon[];\n};\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case \"ADD_POKEMONS\":\n      return {\n        ...state,\n        pokemons: state.pokemons.concat(action.pokemons),\n        next: action.next,\n      };\n    default:\n      return state;\n  }\n}\n\nconst initial = {\n  pokemons: [],\n  next: \"https://pokeapi.co/api/v2/pokemon/?limit=30\",\n};\n\nfunction fetchJSON(input: RequestInfo, init?: RequestInit) {\n  return fetch(input, init).then(response => {\n    if (response.status !== 200) throw response.statusText;\n    return response.json();\n  });\n}\n\nfunction map_async<T, U>(\n  input: T[],\n  transform: (input: T) => Promise<U | null>\n) {\n  return Promise.all(input.map(transform)).then(list =>\n    list.filter(x => x)\n  );\n}\n\n// eslint-disable-next-line no-control-regex\nconst rxWierdCharacter = new RegExp(\"\f|\\\\n\", \"g\");\n\nasync function fetchFlavorText(id: string): Promise<string[]> {\n  try {\n    const data = await fetchJSON(\n      `https://pokeapi.co/api/v2/pokemon-species/${id}/`\n    );\n\n    const flavor: string[] = data.flavor_text_entries\n      .filter((entry: any) => entry.language.name === \"en\")\n      .map((entry: any) =>\n        entry.flavor_text.replace(rxWierdCharacter, \" \")\n      );\n\n    const lowercase = flavor.map(text => text.toLowerCase());\n\n    return flavor.filter((_, index) => {\n      return lowercase.indexOf(lowercase[index], index + 1) < 0;\n    });\n  } catch {\n    return [];\n  }\n}\n\nasync function fetchPokemon({\n  url,\n  name,\n}: {\n  url: string;\n  name: string;\n}): Promise<Pokemon | null> {\n  try {\n    const data = await fetchJSON(url);\n    return {\n      id: data.id,\n      name: name[0].toUpperCase() + name.slice(1),\n      sprites: [data.sprites.front_default, data.sprites.back_default],\n      types: data.types.map((item: any) => item.type.name),\n      flavor: await fetchFlavorText(data.id),\n    };\n  } catch {\n    return null;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initial);\n  const [done, setIsDone] = useState(false);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => void fetchData(), []);\n\n  async function fetchData() {\n    if (!state.next) return setIsDone(true);\n    const data = await fetchJSON(state.next);\n    dispatch({\n      type: \"ADD_POKEMONS\",\n      pokemons: (await map_async(data.results, fetchPokemon)) as Pokemon[],\n      next: data.next,\n    });\n  }\n\n  return (\n    <>\n      <div className=\"pokedex\">\n        {state.pokemons.map((pokemon, index) => (\n          <PokedexInfo key={index} pokemon={pokemon} />\n        ))}\n      </div>\n      {done || <button onClick={fetchData}>Load more ...</button>}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}