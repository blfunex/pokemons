{"version":3,"sources":["components/PokemonImage.tsx","hooks/useModalDialog.ts","hooks/useSpeechSynthesis.ts","components/PokemonTypes.tsx","components/PokemonDetails.tsx","PokedexInfo.tsx","App.tsx","index.tsx"],"names":["PokemonImage","name","back","front","useState","showBack","setShowBack","className","onClick","src","alt","noop","synth","window","speechSynthesis","voices","getVoices","filter","voice","lang","sort","a","b","an","toUpperCase","bn","names","map","selected","length","index","findIndex","indexOf","attemptToGetPreferredVoice","PokemonTypes","types","pokemon","type","style","color","TypeColors","PokemonDetails","enabled","pitch","rate","useEffect","cancel","useCallback","text","utterance","SpeechSynthesisUtterance","speak","useSpeechSynthesis","onCloseHandler","isOpen","setIsOpen","overflow","setOriginalOverflow","ref","useRef","open","getComputedStyle","document","body","close","onOpenDialog","dialog","current","removeAttribute","showModal","onCloseDialog","onDialogBackdropClicked","event","target","callback","node","removeEventListener","addEventListener","useModalDialog","flavor","sprites","hasFlavorText","items","suffix","prefix","slice","join","subjunction","console","log","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","supportedTypes","Object","keys","PokedexInfo","id","mainType","find","background","undefined","reducer","state","action","pokemons","concat","next","initial","fetchJSON","input","init","fetch","then","response","status","statusText","json","map_async","transform","Promise","all","list","x","rxWierdCharacter","RegExp","fetchFlavorText","data","flavor_text_entries","entry","language","flavor_text","replace","lowercase","toLowerCase","_","fetchPokemon","url","front_default","back_default","item","App","useReducer","dispatch","done","setIsDone","fetchData","results","ReactDOM","render","StrictMode","getElementById","location","protocol","host","startsWith","href"],"mappings":"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","file":"static/js/main.0a62c5fc.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function PokemonImage({\n  name,\n  back,\n  front,\n}: {\n  name: string;\n  back: string;\n  front: string;\n}) {\n  const [showBack, setShowBack] = useState(false);\n\n  return (\n    <figure\n      className={\"pokedex-image \" + (showBack ? \"show-back\" : \"\")}\n      onClick={() => setShowBack(!showBack)}\n    >\n      {front && (\n        <>\n          <img\n            className=\"is-front\"\n            src={front}\n            alt={`A front view depiction of ${name}.`}\n          />\n          {back ? (\n            <img\n              className=\"is-back\"\n              src={back}\n              alt={`A back view depiction of ${name}.`}\n            />\n          ) : (\n            <img className=\"is-back is-alt\" src={front} alt=\"\" />\n          )}\n        </>\n      )}\n    </figure>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nfunction noop() {}\n\nexport default function useModalDialog(onCloseHandler = noop) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [overflow, setOriginalOverflow] = useState(\"\");\n\n  const ref = useRef<HTMLDialogElement>(null!);\n\n  const open = useCallback(function open() {\n    setOriginalOverflow(window.getComputedStyle(document.body).overflow);\n    document.body.style.overflow = \"hidden\";\n    setIsOpen(true);\n  }, []);\n\n  const close = useCallback(\n    function close() {\n      document.body.style.overflow = overflow;\n      setIsOpen(false);\n    },\n    [overflow]\n  );\n\n  const onOpenDialog = useCallback(function onOpenDialog() {\n    const dialog = ref.current;\n    if (dialog) {\n      dialog.removeAttribute(\"open\");\n      dialog.showModal();\n    }\n  }, []);\n\n  const onCloseDialog = useCallback(\n    function onCloseDialog() {\n      ref.current?.close();\n      onCloseHandler();\n      close();\n    },\n    [close, onCloseHandler]\n  );\n\n  const onDialogBackdropClicked = useCallback(\n    function onDialogBackdropClicked(event: Event) {\n      if (event.target === ref.current) close();\n    },\n    [close]\n  );\n\n  const callback = useCallback(\n    function refDialogCallback(node: HTMLDialogElement) {\n      const current = ref.current;\n\n      ref.current = node;\n\n      if (current) {\n        current.removeEventListener(\"click\", onDialogBackdropClicked);\n        current.removeEventListener(\"close\", onCloseDialog);\n      }\n\n      if (node) {\n        node.addEventListener(\"click\", onDialogBackdropClicked);\n        node.addEventListener(\"close\", onCloseDialog);\n      }\n    },\n    [onDialogBackdropClicked, onCloseDialog]\n  );\n\n  useEffect(() => {\n    if (isOpen) {\n      onOpenDialog();\n    } else {\n      onCloseDialog();\n    }\n  }, [isOpen, onCloseDialog, onOpenDialog]);\n\n  return [callback, close, open, isOpen] as const;\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\n// Inspired by https://mdn.github.io/web-speech-api/speak-easy-synthesis/\n\nconst synth = window.speechSynthesis;\n\nconst voices = synth\n  ? synth\n      .getVoices()\n      .filter(voice => voice.lang === \"en-US\")\n      .sort(function (a, b) {\n        const an = a.name.toUpperCase(),\n          bn = b.name.toUpperCase();\n        if (an < bn) return -1;\n        else if (an === bn) return 0;\n        else return +1;\n      })\n  : [];\n\nfunction attemptToGetPreferredVoice() {\n  const index = voices.findIndex(\n    voice => voice.name.indexOf(\"David\") >= 0\n  );\n  return index < 0 ? 0 : index;\n}\n\nconst names = voices.map(voice => voice.name);\n\nlet selected = voices.length > 0 ? attemptToGetPreferredVoice() : -1;\n\nconsole.log(...names, \"\\nSelected\", names[selected]);\n\nexport function useSpeechSynthesisVoiceOptions() {\n  const [toggle, refresh] = useState(false);\n\n  const select = useCallback(\n    function selectSpeechSynthesisVoice(name: string) {\n      const previous = selected;\n      selected = voices.findIndex(voice => voice.name === name);\n      if (selected !== previous) refresh(!toggle);\n    },\n    [toggle]\n  );\n\n  return [names, names[selected] || \"\", select] as const;\n}\n\nexport default function useSpeechSynthesis(\n  enabled = true,\n  pitch: number = 2,\n  rate: number = 1\n) {\n  useEffect(() => {\n    if (!enabled) synth?.cancel();\n  }, [enabled]);\n\n  const cancel = useCallback(function cancelTextUtterance() {\n    if (!synth) return;\n    synth?.cancel();\n  }, []);\n\n  const speak = useCallback(\n    function speakTextUtterance(text: string) {\n      if (!synth) return;\n\n      synth?.cancel();\n\n      if (!enabled) return;\n\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      if (selected >= 0) utterance.voice = voices[selected];\n\n      utterance.pitch = pitch;\n      utterance.lang = \"en-US\";\n      utterance.rate = rate;\n\n      synth.speak(utterance);\n    },\n    [enabled, pitch, rate]\n  );\n\n  return [speak, cancel] as const;\n}\n","import { Pokemon, TypeColors } from \"../PokedexInfo\";\n\nexport default function PokemonTypes({\n  pokemon: { types },\n}: {\n  pokemon: Pokemon;\n}) {\n  return (\n    <div className=\"pokedex-types\">\n      {types.map((type, index) => (\n        <span key={index} className=\"nes-badge\">\n          <span\n            className=\"is-dark\"\n            style={{\n              color: TypeColors[type],\n            }}\n          >\n            {type}\n          </span>\n        </span>\n      ))}\n    </div>\n  );\n}\n","import PokemonImage from \"./PokemonImage\";\n\nimport useModalDialog from \"../hooks/useModalDialog\";\n\nimport type { Pokemon } from \"../PokedexInfo\";\nimport useSpeechSynthesis from \"../hooks/useSpeechSynthesis\";\nimport PokemonTypes from \"./PokemonTypes\";\n\nfunction subjunction(items: string[], suffix = \"\", prefix = \"\") {\n  switch (items.length) {\n    case 0:\n      return \"\";\n    case 1:\n      return `${prefix} ${items[0]} ${suffix}`;\n    case 2:\n      return `${prefix} ${items[0]} and ${items[1]} ${suffix}`;\n    default:\n      return `${prefix} ${items.slice(0, -1).join(\", \")} and ${\n        items[items.length - 1]\n      } ${suffix}`;\n  }\n}\n\nexport default function PokemonDetails({ pokemon }: { pokemon: Pokemon }) {\n  const [speak, cancel] = useSpeechSynthesis();\n\n  const [ref, close, open] = useModalDialog(cancel);\n\n  const { flavor, name, sprites, types } = pokemon;\n\n  const hasFlavorText = flavor.length > 0;\n\n  return (\n    <>\n      {hasFlavorText ? (\n        <>\n          <p>{flavor[0]}</p>\n          <div className=\"pokedex-details\">\n            <button\n              type=\"button\"\n              className=\"nes-btn is-primary is-small\"\n              onClick={() => {\n                open();\n                speak(\n                  `This is ${name}, ${subjunction(\n                    types,\n                    \"pokemon\",\n                    \"it is a\"\n                  )}.\\n${flavor.join(\"\\n\")}`\n                );\n              }}\n            >\n              More details\n            </button>\n            <dialog className=\"nes-dialog pokedex-dialog\" ref={ref}>\n              <header>\n                <h3>{name}'s details</h3>\n                <button type=\"button\" onClick={close}>\n                  <i className=\"nes-icon is-small close\"></i>\n                </button>\n              </header>\n              <main>\n                <section>\n                  <div>\n                    <PokemonTypes pokemon={pokemon} />\n                  </div>\n                  <PokemonImage\n                    name={name}\n                    front={sprites[0]}\n                    back={sprites[1]}\n                  />\n                </section>\n                <section>\n                  {flavor.map((text, index) => (\n                    <p key={index}>{text}</p>\n                  ))}\n                </section>\n              </main>\n            </dialog>\n          </div>\n        </>\n      ) : (\n        <p>No details were found about this pokemon</p>\n      )}\n    </>\n  );\n}\n","import PokemonDetails from \"./components/PokemonDetails\";\nimport PokemonImage from \"./components/PokemonImage\";\nimport PokemonTypes from \"./components/PokemonTypes\";\n\nexport type Pokemon = {\n  id: string;\n  name: string;\n  sprites: [string, string];\n  flavor: string[];\n  types: string[];\n};\n\ninterface PokedexInfoProps {\n  pokemon: Pokemon;\n}\n\nexport const TypeColors: Record<string, string> = {\n  fire: \"#FFA341\",\n  grass: \"#98d7a5\",\n  electric: \"#F2E04C\",\n  water: \"#AABEFF\",\n  ground: \"#D79624\",\n  rock: \"#d5d5d4\",\n  fairy: \"#FFC8CF\",\n  poison: \"#BC8FED\",\n  bug: \"#f8d5a3\",\n  dragon: \"#97b3e6\",\n  psychic: \"#eaeda1\",\n  flying: \"#FFECC0\",\n  fighting: \"#E6E0D4\",\n  normal: \"#D5D5D5\",\n};\n\nconst supportedTypes = Object.keys(TypeColors);\n\nexport default function PokedexInfo({ pokemon }: PokedexInfoProps) {\n  const { id, name, types, sprites } = pokemon;\n\n  const mainType = supportedTypes.find(type => types.indexOf(type) >= 0);\n\n  return (\n    <>\n      <article\n        className=\"pokedex-info\"\n        style={{\n          background: mainType ? TypeColors[mainType] : undefined,\n        }}\n      >\n        <PokemonImage name={name} front={sprites[0]} back={sprites[1]} />\n        <section>\n          <header>\n            <h3>{name}</h3>\n            <h5>#{id}</h5>\n          </header>\n          <section>\n            <PokemonTypes pokemon={pokemon} />\n            <PokemonDetails pokemon={pokemon} />\n          </section>\n        </section>\n      </article>\n    </>\n  );\n}\n","import { useEffect, useReducer, useState } from \"react\";\n\nimport PokedexInfo, { Pokemon } from \"./PokedexInfo\";\n\ntype Action = {\n  type: \"ADD_POKEMONS\";\n  pokemons: Pokemon[];\n  next: string;\n};\n\ntype State = {\n  next: string;\n  pokemons: Pokemon[];\n};\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case \"ADD_POKEMONS\":\n      return {\n        ...state,\n        pokemons: state.pokemons.concat(action.pokemons),\n        next: action.next,\n      };\n    default:\n      return state;\n  }\n}\n\nconst initial = {\n  pokemons: [],\n  next: \"https://pokeapi.co/api/v2/pokemon/?limit=30\",\n};\n\nfunction fetchJSON(input: RequestInfo, init?: RequestInit) {\n  return fetch(input, init).then(response => {\n    if (response.status !== 200) throw response.statusText;\n    return response.json();\n  });\n}\n\nfunction map_async<T, U>(\n  input: T[],\n  transform: (input: T) => Promise<U | null>\n) {\n  return Promise.all(input.map(transform)).then(list =>\n    list.filter(x => x)\n  );\n}\n\n// eslint-disable-next-line no-control-regex\nconst rxWierdCharacter = new RegExp(\"\f|\\\\n\", \"g\");\n\nasync function fetchFlavorText(id: string): Promise<string[]> {\n  try {\n    const data = await fetchJSON(\n      `https://pokeapi.co/api/v2/pokemon-species/${id}/`\n    );\n\n    const flavor: string[] = data.flavor_text_entries\n      .filter((entry: any) => entry.language.name === \"en\")\n      .map((entry: any) =>\n        entry.flavor_text.replace(rxWierdCharacter, \" \")\n      );\n\n    const lowercase = flavor.map(text => text.toLowerCase());\n\n    return flavor.filter((_, index) => {\n      return lowercase.indexOf(lowercase[index], index + 1) < 0;\n    });\n  } catch {\n    return [];\n  }\n}\n\nasync function fetchPokemon({\n  url,\n  name,\n}: {\n  url: string;\n  name: string;\n}): Promise<Pokemon | null> {\n  try {\n    const data = await fetchJSON(url);\n    return {\n      id: data.id,\n      name: name[0].toUpperCase() + name.slice(1),\n      sprites: [data.sprites.front_default, data.sprites.back_default],\n      types: data.types.map((item: any) => item.type.name),\n      flavor: await fetchFlavorText(data.id),\n    };\n  } catch {\n    return null;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initial);\n  const [done, setIsDone] = useState(false);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => void fetchData(), []);\n\n  async function fetchData() {\n    if (!state.next) return setIsDone(true);\n    const data = await fetchJSON(state.next);\n    dispatch({\n      type: \"ADD_POKEMONS\",\n      pokemons: (await map_async(data.results, fetchPokemon)) as Pokemon[],\n      next: data.next,\n    });\n  }\n\n  return (\n    <>\n      <div className=\"pokedex\">\n        {state.pokemons.map((pokemon, index) => (\n          <PokedexInfo key={index} pokemon={pokemon} />\n        ))}\n      </div>\n      {done || <button onClick={fetchData}>Load more ...</button>}\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-restricted-globals */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nif (\n  location.protocol !== \"https:\" &&\n  !location.host.startsWith(\"localhost\")\n) {\n  location.href = location.href.replace(\"http://\", \"https://\");\n}\n"],"sourceRoot":""}